#!/bin/sh

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -d "$HOME/.poke" ]; then
	DIR="$HOME/.poke"
fi

echo $DIR

usage() {
	cat <<EOF
Usage: poke [-filetype|--lang] filename"
	--help 	   See all commands
	-j|--java  Java file
	-c         C file
	-cpp|--c++ C++ file
EOF
	exit $1
}

help() {
	cat <<EOF
Usage: poke [-opts|--lang] filename
	-h|--help 	See all commands
	--edit [lang]	Edit template for specified language (Eg: poke -edit java) 
	-j|--java 	Java file
	-c         	C file
	-cpp|--c++ 	C++ file
	-cs|--cs   	C# file
	-f|--fs    	F# file	
	-g|--go    	Go file	
EOF
	exit 1
}

cmd_exists(){
	command -v "$1" >/dev/null ;
}

edit_tmpl() {
	if [[ $# -eq 0 ]]; then
		usage
	fi
	tmpl="$DIR/tmpl/poke.$1"

	if [ -f $tmpl ]; then
		if cmd_exists vim ; then
			vim $tmpl
		else
			vi $tmpl
		fi
	fi
	exit 1
}

if [ $# -lt 1 ]; then
	usage 1 >&2
	exit 1
fi

ext=""
if [[ "$1" == -* ]]; then
	case "$1" in
		-j|--java)
			ext="java"
			;;
		-c)
			ext="c"
			;;
		-cpp|--c++)
			ext="cpp"
			;;
		-f|-fs|--[Ff]#)
			ext="fs"
			;;
		-g|--go)
			ext="go"
			;;
		-cs|--[Cc]#)
			ext="cs"
			;;
		-h|--help)
			help 1 
			;;
		--edit)
			edit_tmpl "$2"
			;;
		*)
			usage
			;;
	esac
	shift
fi

if [[ $# -eq 0 ]]; then
	usage
fi

fullfile=$1
fout=$(basename "$fullfile")
fext="${fout##*.}"
fname="${fout%.*}"

if [[ -z $ext ]]; then
	ext=$fext
fi

# fout=$fname.$ext

# Match on the file type and use the samples
echo $fout

# Check if file + ext exists
tmpl="$DIR/tmpl/poke.$ext"
if [ -f $tmpl ]; then
	date=`date +"%m\/%d\/%Y"`
	dir=${PWD##*/}
	REGEX="s/\$FNAME/$fname/;s/\$FILE/$fout/;s/\$DATE/$date/;s/\$DIR/$dir/"
	sed $REGEX $tmpl > $fout
else
	echo "Language not recognized!"
	touch $fout
fi
